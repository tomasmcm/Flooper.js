// WRAP AND CENTER CONTENT
@mixin wrap($width: null){
  margin: 0 auto;
  max-width: 100%;

  // GUTTERS
  @each $breakpoint, $gutter in $fl-grid-gutter-map{
    @if $breakpoint == null {
      padding:{
        left: px-to-rem($gutter);
        right: px-to-rem($gutter);
      }
    } @else {
      @include mappy-bp($breakpoint){
        padding: {
          left: px-to-rem($gutter);
          right: px-to-rem($gutter);
        }
      }
    }
  }

  // SIZING
  @if ($width == 'null' or $width == null) {
    @each $breakpoint, $size in $fl-wrapper-map{
      @if $breakpoint == null {
        width: $size;
      } @else {
        @include mappy-bp($breakpoint){
          width: $size;
        }
      }
    }
  } @else {
    width: $width;
  }
}


/**
 * https://css-tricks.com/snippets/css/fluid-typography/
 */
@mixin fluid-type($min-font-size, $max-font-size, $min-vw, $max-vw) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}


@mixin expandToParent($pseudo: false){
  @if $pseudo{
    content: " ";
  }
  display: block;
  width: 100%;
  height: 100%;
  top:0;
  left:0;
}
